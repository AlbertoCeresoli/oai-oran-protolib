syntax = "proto2";

enum RAN_message_type{
    SUBSCRIPTION = 1;
    INDICATION_REQUEST = 2;
    INDICATION_RESPONSE = 3;
    CONTROL = 4;
} 

enum RAN_parameter{
    GNB_ID = 1;
    UE_LIST = 3;
}

message RAN_param_map_entry{
    required RAN_parameter key = 1;
    oneof value{
        int64 int64_value  = 2;
        string string_value = 3;
        ue_list_m ue_list = 4;
    }
}

/* RAN SUBMESSAGES */
message RAN_indication_request{
    repeated RAN_parameter target_params = 1;
}

message RAN_indication_response{
    repeated RAN_param_map_entry param_map = 1;
}

message RAN_control_request{
    repeated RAN_param_map_entry target_param_map = 1;
}

/* MASTER RAN MESSAGE */

message RAN_message{
    required RAN_message_type msg_type = 1;
    oneof payload{
        RAN_indication_request ran_indication_request = 2;
        RAN_indication_response ran_indication_response = 3;
        RAN_control_request ran_control_request = 4;
    }
}

message ue_info_m{

    // this is to identify the ue
    required int32 rnti=1;
    
    // Per-UE RSRP (Reference Signal Received Power)
    optional float rsrp = 2;

    // Per-UE BER (Bit Error Rate)
    optional float ber_uplink = 3;
    optional float ber_downlink = 4;

    // Per-UE MCS (Modulation and Coding Scheme)
    optional int32 mcs_uplink = 5;
    optional int32 mcs_downlink = 6;
        
    // Cell load information (allocated PRBs)
    optional int32 cell_load = 3;
}

message ue_list_m{
    required int32 connected_ues = 1;
    repeated ue_info_m ue_info = 2;

}


message cell_load_m {
    required int32 used_prbs = 1;
}
